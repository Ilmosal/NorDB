[
  "tests/core/test_nordic.py::TestReadNordic::()::testReadNordic",
  "tests/core/test_nordic.py::TestReadNordic::()::testFaultyReadNordic",
  "tests/core/test_nordic2quakeml.py::TestNordic2Quakeml::()::test_Conversion",
  "tests/core/test_nordic2sc3.py::TestNordic2SC3::()::test_Conversion",
  "tests/core/test_nordicFix.py::TestNordicFix::()::testFixNordic",
  "tests/core/test_nordicFix.py::TestNordicFix::()::testFixFaultyNordic",
  "tests/core/test_nordicRead.py::TestReadNordicFile::()::testSuccesfullRead",
  "tests/core/test_nordicRead.py::TestReadNordicFile::()::testTooShortLineRead",
  "tests/core/test_station2stationxml.py::TestStation2StationXML::()::testCorrectStation",
  "tests/core/test_utils.py::TestXstr::()::testString",
  "tests/core/test_utils.py::TestXstr::()::testNone",
  "tests/core/test_utils.py::TestAddString2String::()::testCorrectString1",
  "tests/core/test_utils.py::TestAddString2String::()::testCorrectString2",
  "tests/core/test_utils.py::TestAddString2String::()::testNone",
  "tests/core/test_utils.py::TestAddString2String::()::testTooLongString",
  "tests/core/test_utils.py::TestAddString2String::()::testWrongFormatter",
  "tests/core/test_utils.py::TestAddString2String::()::testWrongInputType",
  "tests/core/test_utils.py::TestAddInteger2String::()::testCorrectInteger1",
  "tests/core/test_utils.py::TestAddInteger2String::()::testCorrectInteger2",
  "tests/core/test_utils.py::TestAddInteger2String::()::testCorrectInteger3",
  "tests/core/test_utils.py::TestAddInteger2String::()::testNoneValue",
  "tests/core/test_utils.py::TestAddInteger2String::()::testWithTooSmallValLen",
  "tests/core/test_utils.py::TestAddInteger2String::()::testWrongFormatter",
  "tests/core/test_utils.py::TestAddInteger2String::()::testWithWrongValueType",
  "tests/core/test_utils.py::TestAddFloat2String::()::testCorrectFloat1",
  "tests/core/test_utils.py::TestAddFloat2String::()::testBigNegativeFloat",
  "tests/core/test_utils.py::TestAddFloat2String::()::testFloatWithLongDecimal",
  "tests/core/test_utils.py::TestAddFloat2String::()::testWithNegativeLong",
  "tests/core/test_utils.py::TestAddFloat2String::()::testNoneValue",
  "tests/core/test_utils.py::TestAddFloat2String::()::testWithTooSmallValLen",
  "tests/core/test_utils.py::TestAddFloat2String::()::testWrongFormatter",
  "tests/core/test_utils.py::TestAddFloat2String::()::testWithWrongValueType",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWithCorrectValueWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWithCorrectStringValueWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWithUpperLimitWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWithLowerLimitWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWithEmptyStringWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWithNoneWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testFailLowerLimitWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testFailUpperLimitWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWrongTypeWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWrongTypeStringWorks",
  "tests/core/test_validationTools.py::TestValidateInteger::()::testWithNoUpperLimitWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWithCorrectValueWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWithCorrectStringValueWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWithUpperLimitWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWithLowerLimitWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWithEmptyStringWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWithNoneWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testFailUpperLimitWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testFailLowerLimitWorks",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testFailWithNAN",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testFailWithInf",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWrongTypeFails",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWrongStringTypeFails",
  "tests/core/test_validationTools.py::TestValidateFloat::()::testWithNoUpperLimitWorks",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithCorrectStringWorks",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithListAllowedWorks",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithSingleCharListStringWorks",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithMaxLenWorks",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithMinLenWorks",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithListAllowedFails",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithgListAllowedSingleChar",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithTooLongStringFails",
  "tests/core/test_validationTools.py::TestValidateString::()::testWithTooLongSmallFails",
  "tests/database/test_creationInfo.py::TestCreationInfo::()::testCreationInfo",
  "tests/database/test_creationInfo.py::TestExecuteCommand::()::testExecuteCommandNoReturn",
  "tests/database/test_creationInfo.py::TestExecuteCommand::()::testExecuteCommandReturn",
  "tests/database/test_instrument2sql.py::TestInsertInstrument2Database::()::testInsertIsSuccesfull",
  "tests/database/test_norDBManagment.py::TestNorDBManagment::()::testCreateDatabaseDoesntWorkIfThereIsDatabase",
  "tests/database/test_norDBManagment.py::TestNorDBManagment::()::testDestroyDatabaseDoesntWorkTwice",
  "tests/database/test_nordic2sql.py::TestNordic2SQL::()::testSuccesfulNordic",
  "tests/database/test_nordic2sql.py::TestNordic2SQL::()::testPutSameEventTwice",
  "tests/database/test_nordic2sql.py::TestNordic2SQL::()::testAttachToNonExistingEvent",
  "tests/database/test_nordicModify.py::TestNordicChangeType::()::testNordicChangeTypeWorks",
  "tests/database/test_nordicModify.py::TestNordicChangeType::()::testNordicChangeTypeWithNoEvent",
  "tests/database/test_nordicModify.py::TestNordicChangeType::()::testNordicChangeTypeWithSameType",
  "tests/database/test_nordicModify.py::TestNordicChangeRoot::()::testNordicChangeRootWorks",
  "tests/database/test_nordicModify.py::TestNordicChangeRoot::()::testNordicChangeRootWorksWithNonExistingRoot",
  "tests/database/test_nordicModify.py::TestNordicChangeRoot::()::testNordicChangeRootFailsWithNonExisting",
  "tests/database/test_nordicModify.py::TestNordicChangeRoot::()::testNordicChangeRootFailsWithoutEvent",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindAllEventsWithoutCriteria",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithDate",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithMagnitude",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithLatitude",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithLatitudeRange",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithLatitudeUnder",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithLatitudeOver",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithLongitude",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithDepth",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithEventType",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithDistanceIndicator",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithEventID",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testFindEventsWithEventDescID",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testSearchWithWrongTypeCriteria",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingDate",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingMagnitude",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingLatitude",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingLongitude",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingDepth",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingEventType",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingDistanceIndicator",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingEventID",
  "tests/database/test_nordicSearch.py::TestNordicSearchWithCriteria::()::testNoEventsWithNonexistingEventDescID",
  "tests/database/test_nordicSearch.py::TestSearchSameEvents::()::testSearchSameEvent",
  "tests/database/test_nordicSearch.py::TestSearchSimilarEvents::()::testSearchSimilarEvent",
  "tests/database/test_resetDB.py::TestResetEvents::()::testResetEvents",
  "tests/database/test_resetDB.py::TestResetStations::()::testResetStations",
  "tests/database/test_resetDB.py::TestResetAll::()::testResetAll",
  "tests/database/test_sensor2sql.py::TestInsertSensor2Database::()::testInsertIsSuccesfull",
  "tests/database/test_sensor2sql.py::TestInsertSensor2Database::()::testInsertWithoutInsturmentFail",
  "tests/database/test_sitechan2sql.py::TestInsertSiteChan2Database::()::testInsertIsSuccesfull",
  "tests/database/test_sitechan2sql.py::TestInsertSiteChan2Database::()::testInsertWithoutStations",
  "tests/database/test_solutionTypeHandler.py::TestAddSolutionType::()::testAddNewSolutionType",
  "tests/database/test_solutionTypeHandler.py::TestAddSolutionType::()::testAddTooLongEventId",
  "tests/database/test_solutionTypeHandler.py::TestAddSolutionType::()::testAddTooLongEventDesc",
  "tests/database/test_solutionTypeHandler.py::TestAddSolutionType::()::testAddAlreadyExistingEventId",
  "tests/database/test_solutionTypeHandler.py::TestGetSolutionTypes::()::testGetSolutionTypes",
  "tests/database/test_solutionTypeHandler.py::TestRemoveSolutionTypes::()::testGetSolutionTypes",
  "tests/database/test_sql2instrument.py::TestSQL2Instrument::()::testGetAllInstruments",
  "tests/database/test_sql2instrument.py::TestSQL2Instrument::()::testGetOneInstruments",
  "tests/database/test_sql2sensor.py::TestSQL2Sensor::()::testGetAllSensors",
  "tests/database/test_sql2sensor.py::TestSQL2Sensor::()::testGetOneSensor",
  "tests/database/test_sql2sitechan.py::TestSQL2SiteChan::()::testGetAllSuccesfull",
  "tests/database/test_sql2sitechan.py::TestSQL2SiteChan::()::testGetOneSuccesfull",
  "tests/database/test_sql2station.py::TestSQL2Station::()::testGetAllWorks",
  "tests/database/test_sql2station.py::TestSQL2Station::()::testGetStationsWorks",
  "tests/database/test_sql2station.py::TestSQL2Station::()::testGetOneWorks",
  "tests/database/test_station2sql.py::TestInsertStation2Database::()::testInsertIsSuccesfull",
  "tests/database/test_station2sql.py::TestInsertStation2Database::()::testInsertTwice",
  "tests/nordic/test_nordicMain.py::TestCreateNordicMain::()::testCreateEmptyNordicMain",
  "tests/nordic/test_nordicMain.py::TestCreateNordicMain::()::testFillWithCorrectValues"
]